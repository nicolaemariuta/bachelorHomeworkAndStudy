--
-- Generated by VASY
--
ENTITY multiplier_data IS
PORT(
  op_a	: IN BIT_VECTOR(3 DOWNTO 0);
  op_b	: IN BIT_VECTOR(3 DOWNTO 0);
  result	: OUT BIT_VECTOR(7 DOWNTO 0);
  clk	: IN BIT;
  reset	: IN BIT;
  load_op	: IN BIT;
  end_op	: IN BIT;
  shift_a	: IN BIT;
  shift_p	: IN BIT;
  add_p_b	: IN BIT;
  msb_a	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END multiplier_data;

ARCHITECTURE VBE OF multiplier_data IS

  SIGNAL rtlalc_1	: REG_BIT REGISTER;
  SIGNAL rtlsum_0	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlexts_0	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL a	: REG_VECTOR(3 DOWNTO 0) REGISTER;
  SIGNAL b	: REG_VECTOR(3 DOWNTO 0) REGISTER;
  SIGNAL p	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL r	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL reg_p_reddef_24	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL reg_p_reddef_22	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL reg_a_reddef_17	: BIT_VECTOR(3 DOWNTO 0);
BEGIN

  msb_a <= rtlalc_1;
  rtlcarry_0(0) <= '0';
  rtlsum_0 <= ((p XOR rtlexts_0) XOR rtlcarry_0);
  rtlcarry_0(15 downto 1) <= (((p(2 DOWNTO 0) AND rtlexts_0(2 DOWNTO 0)) OR (p(2 DOWNTO 0) AND rtlcarry_0(2 DOWNTO 0)
)) OR (rtlexts_0(2 DOWNTO 0) AND rtlcarry_0(2 DOWNTO 0)));
  rtlexts_0 <= ("0000" & b);
  result <= r;
  LABEL0 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    r <= GUARDED "0000" WHEN (NOT(reset) OR load_op) ELSE
     p WHEN (reset AND end_op AND NOT(load_op)) ELSE r;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    p <= GUARDED "0000" WHEN (NOT(reset) OR load_op) ELSE
     (((shift_p AND reg_p_reddef_24(15)) OR (NOT(shift_p) AND reg_p_reddef_22(15))) 
& ((shift_p AND reg_p_reddef_24(14)) OR (NOT(shift_p) AND reg_p_reddef_22(14))) 
& ((shift_p AND reg_p_reddef_24(13)) OR (NOT(shift_p) AND reg_p_reddef_22(13))) 
& ((shift_p AND reg_p_reddef_24(12)) OR (NOT(shift_p) AND reg_p_reddef_22(12))) 
& ((shift_p AND reg_p_reddef_24(11)) OR (NOT(shift_p) AND reg_p_reddef_22(11))) 
& ((shift_p AND reg_p_reddef_24(10)) OR (NOT(shift_p) AND reg_p_reddef_22(10))) 
& ((shift_p AND reg_p_reddef_24(9)) OR (NOT(shift_p) AND reg_p_reddef_22(9))) & 
((shift_p AND reg_p_reddef_24(8)) OR (NOT(shift_p) AND reg_p_reddef_22(8))) & ((shift_p
 AND reg_p_reddef_24(3)) OR (NOT(shift_p) AND reg_p_reddef_22(3))) & ((shift_p 
AND reg_p_reddef_24(6)) OR (NOT(shift_p) AND reg_p_reddef_22(6))) & ((shift_p AND reg_p_reddef_24(5)
) OR (NOT(shift_p) AND reg_p_reddef_22(5))) & ((shift_p AND reg_p_reddef_24(4)) 
OR (NOT(shift_p) AND reg_p_reddef_22(4))) & ((shift_p AND reg_p_reddef_24(3)) OR 
(NOT(shift_p) AND reg_p_reddef_22(3))) & ((shift_p AND reg_p_reddef_24(2)) OR (
NOT(shift_p) AND reg_p_reddef_22(2))) & ((shift_p AND reg_p_reddef_24(1)) OR (NOT(shift_p
) AND reg_p_reddef_22(1))) & ((shift_p AND reg_p_reddef_24(0)) OR (NOT(shift_p) 
AND reg_p_reddef_22(0)))) WHEN (reset AND (shift_p OR add_p_b) AND NOT(load_op)) ELSE p;
  END BLOCK LABEL1;
  reg_p_reddef_22 <= rtlsum_0;
  reg_p_reddef_24 <= (p(2 DOWNTO 0) & '0');
  LABEL2 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    b <= GUARDED "0000" WHEN NOT(reset) ELSE
     op_b WHEN (reset AND load_op) ELSE b;
  END BLOCK LABEL2;
  LABEL3 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    a <= GUARDED "0000" WHEN (NOT(shift_a) AND NOT(reset) AND NOT(load_op)) ELSE
     (((shift_a AND reg_a_reddef_17(3)) OR (NOT(shift_a) AND op_a(3))) & ((shift_a 
AND reg_a_reddef_17(6)) OR (NOT(shift_a) AND op_a(6))) & ((shift_a AND reg_a_reddef_17(5)
) OR (NOT(shift_a) AND op_a(5))) & ((shift_a AND reg_a_reddef_17(4)) OR (NOT(shift_a
) AND op_a(4))) & ((shift_a AND reg_a_reddef_17(3)) OR (NOT(shift_a) AND op_a(3)
)) & ((shift_a AND reg_a_reddef_17(2)) OR (NOT(shift_a) AND op_a(2))) & ((shift_a
 AND reg_a_reddef_17(1)) OR (NOT(shift_a) AND op_a(1))) & ((shift_a AND reg_a_reddef_17(0)
) OR (NOT(shift_a) AND op_a(0)))) WHEN (shift_a OR load_op) ELSE a;
  END BLOCK LABEL3;
  LABEL4 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_1 <= GUARDED a(3);
  END BLOCK LABEL4;
  reg_a_reddef_17 <= (a(2 downto 0) & '0');
END VBE;
