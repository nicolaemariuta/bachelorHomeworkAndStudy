--
-- Generated by VASY
--
ENTITY multiplier_control IS
PORT(
  clk	: IN BIT;
  reset	: IN BIT;
  start	: IN BIT;
  msb_a	: IN BIT;
  ready	: OUT BIT;
  end_op	: OUT BIT;
  load_op	: OUT BIT;
  shift_a	: OUT BIT;
  shift_p	: OUT BIT;
  add_p_b	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END multiplier_control;

ARCHITECTURE VBE OF multiplier_control IS

  SIGNAL rtlsum_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtldef_17	: BIT;
  SIGNAL rtldef_16	: BIT;
  SIGNAL rtldef_15	: BIT;
  SIGNAL rtldef_14	: BIT;
  SIGNAL rtldef_13	: BIT;
  SIGNAL rtldef_12	: BIT;
  SIGNAL rtldef_11	: BIT;
  SIGNAL rtldef_10	: BIT;
  SIGNAL rtldef_9	: BIT;
  SIGNAL rtldef_8	: BIT;
  SIGNAL rtldef_7	: BIT;
  SIGNAL rtldef_6	: BIT;
  SIGNAL rtldef_5	: BIT;
  SIGNAL rtldef_4	: BIT;
  SIGNAL rtldef_3	: BIT;
  SIGNAL rtldef_2	: BIT;
  SIGNAL rtldef_1	: BIT;
  SIGNAL rtldef_0	: BIT;
  SIGNAL curenta	: REG_VECTOR(0 TO 2) REGISTER;
  SIGNAL urmatoare	: BIT_VECTOR(0 TO 2);
  SIGNAL valid	: REG_BIT REGISTER;
  SIGNAL count	: REG_VECTOR(31 DOWNTO 0) REGISTER;
  SIGNAL contor_reddef_41	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL clc_def_15	: BIT;
  SIGNAL clc_def_12	: BIT;
BEGIN

  rtlcarry_0(0) <= '1';
  rtlsum_0 <= ((count XOR "11111111111111111111111111111110") XOR rtlcarry_0);
  rtlcarry_0(31 downto 1) <= (((count(30 downto 0) AND "1111111111111111111111111111110") OR (count(30 downto 0)
 AND rtlcarry_0(30 downto 0))) OR ("1111111111111111111111111111110" AND rtlcarry_0(30 downto 0)
));
  ready <= valid;
  LABEL0 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    valid <= GUARDED '1' WHEN (reset AND curenta(0) AND curenta(2) AND NOT(curenta(1))) ELSE
     '0' WHEN (NOT(reset) OR (NOT(curenta(0)) AND NOT(curenta(2)) AND NOT(curenta(1)))) ELSE valid;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    count <= GUARDED "00000000000000000000000000000000" WHEN NOT(reset) ELSE
     ((NOT(curenta(2)) OR contor_reddef_41(31)) & (curenta(2) AND contor_reddef_41(30)
) & (curenta(2) AND contor_reddef_41(29)) & (curenta(2) AND contor_reddef_41(28)
) & (curenta(2) AND contor_reddef_41(27)) & (curenta(2) AND contor_reddef_41(26)
) & (curenta(2) AND contor_reddef_41(25)) & (curenta(2) AND contor_reddef_41(24)
) & (curenta(2) AND contor_reddef_41(23)) & (curenta(2) AND contor_reddef_41(22)
) & (curenta(2) AND contor_reddef_41(21)) & (curenta(2) AND contor_reddef_41(20)
) & (curenta(2) AND contor_reddef_41(19)) & (curenta(2) AND contor_reddef_41(18)
) & (curenta(2) AND contor_reddef_41(17)) & (curenta(2) AND contor_reddef_41(16)
) & (curenta(2) AND contor_reddef_41(15)) & (curenta(2) AND contor_reddef_41(14)
) & (curenta(2) AND contor_reddef_41(13)) & (curenta(2) AND contor_reddef_41(12)
) & (curenta(2) AND contor_reddef_41(11)) & (curenta(2) AND contor_reddef_41(10)
) & (curenta(2) AND contor_reddef_41(9)) & (curenta(2) AND contor_reddef_41(8)) 
& (curenta(2) AND contor_reddef_41(7)) & (curenta(2) AND contor_reddef_41(6)) & 
(curenta(2) AND contor_reddef_41(5)) & (curenta(2) AND contor_reddef_41(4)) & (curenta(2)
 AND contor_reddef_41(3)) & (curenta(2) AND contor_reddef_41(2)) & (curenta(2) 
AND contor_reddef_41(1)) & (contor_reddef_41(0) AND curenta(2))) WHEN (reset AND NOT(curenta(0)) AND NOT(curenta(1))) ELSE count;
  END BLOCK LABEL1;
  contor_reddef_41 <= rtlsum_0;
  LABEL2 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    curenta <= GUARDED urmatoare;
  END BLOCK LABEL2;
  end_op <= (curenta = "101");
  add_p_b <= (curenta = "011");
  shift_a <= (curenta = "110");
  shift_p <= (curenta = "001");
  load_op <= (curenta = "100");
  rtldef_17 <= '1' WHEN ((curenta(2) AND NOT(curenta(1)) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_16 <= '1' WHEN ((curenta(2) AND curenta(1) AND NOT(curenta(0))) = '1') ELSE
     '0';
  rtldef_15 <= '1' WHEN ((NOT(curenta(2)) AND curenta(1) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_14 <= '1' WHEN ((curenta(2) AND NOT(curenta(1)) AND NOT(curenta(0))) = '1') ELSE
     '0';
  rtldef_13 <= '1' WHEN ((NOT(curenta(2)) AND curenta(1) AND NOT(curenta(0))) = '1') ELSE
     '0';
  rtldef_12 <= '1' WHEN ((NOT(curenta(2)) AND NOT(curenta(1)) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_11 <= '1' WHEN ((NOT(curenta(2)) AND NOT(curenta(1)) AND NOT(curenta(0))) = '1') ELSE
     '0';
  urmatoare <= (((rtldef_11 & rtldef_11 & rtldef_11) AND ((rtldef_10 & rtldef_10 & rtldef_10) 
AND ((rtldef_9 & rtldef_9 & rtldef_9) AND "100"))) OR ((rtldef_12 & rtldef_12 & rtldef_12
) AND ((rtldef_8 & rtldef_8 & rtldef_8) AND "001")) OR ((rtldef_13 & rtldef_13 &
 rtldef_13) AND ((rtldef_7 & rtldef_7 & rtldef_7) AND (((rtldef_5 & rtldef_5 & rtldef_5
) AND "110") OR ((rtldef_6 & rtldef_6 & rtldef_6) AND "011")))) OR ((rtldef_14 &
 rtldef_14 & rtldef_14) AND ((rtldef_4 & rtldef_4 & rtldef_4) AND "010")) OR ((rtldef_15
 & rtldef_15 & rtldef_15) AND ((rtldef_3 & rtldef_3 & rtldef_3) AND (((rtldef_1 
& rtldef_1 & rtldef_1) AND "001") OR ((rtldef_2 & rtldef_2 & rtldef_2) AND "101"
)))) OR ((rtldef_16 & rtldef_16 & rtldef_16) AND ((rtldef_0 & rtldef_0 & rtldef_0
) AND "110")) OR ((rtldef_17 & rtldef_17 & rtldef_17) AND "000"));
  rtldef_10 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_9 <= '1' WHEN (start = '1') ELSE
     '0';
  rtldef_8 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_7 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_6 <= '1' WHEN clc_def_15 ELSE
     '0';
  rtldef_5 <= '1' WHEN NOT(clc_def_15) ELSE
     '0';
  clc_def_15 <= (msb_a = '1');
  rtldef_4 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_3 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_2 <= '1' WHEN clc_def_12 ELSE
     '0';
  rtldef_1 <= '1' WHEN NOT(clc_def_12) ELSE
     '0';
  clc_def_12 <= (count = "00000000000000000000000000000000");
  rtldef_0 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
END VBE;
