--
-- Generated by VASY
--
ENTITY multiplier IS
PORT(
  op_a	: IN BIT_VECTOR(7 DOWNTO 0);
  op_b	: IN BIT_VECTOR(7 DOWNTO 0);
  result	: OUT BIT_VECTOR(15 DOWNTO 0);
  clk	: IN BIT;
  reset	: IN BIT;
  start	: IN BIT;
  ready	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END multiplier;

ARCHITECTURE VST OF multiplier IS

  SIGNAL load_op	: BIT;
  SIGNAL shift_a	: BIT;
  SIGNAL shift_p	: BIT;
  SIGNAL add_p_b	: BIT;
  SIGNAL end_op	: BIT;
  SIGNAL msb_a	: BIT;

  COMPONENT multiplier_data
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  op_a	: IN BIT_VECTOR(7 DOWNTO 0);
  op_b	: IN BIT_VECTOR(7 DOWNTO 0);
  result	: OUT BIT_VECTOR(15 DOWNTO 0);
  clk	: IN BIT;
  reset	: IN BIT;
  load_op	: IN BIT;
  end_op	: IN BIT;
  shift_a	: IN BIT;
  shift_p	: IN BIT;
  add_p_b	: IN BIT;
  msb_a	: OUT BIT
  );
  END COMPONENT;

  COMPONENT multiplier_control
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  clk	: IN BIT;
  reset	: IN BIT;
  start	: IN BIT;
  msb_a	: IN BIT;
  ready	: OUT BIT;
  end_op	: OUT BIT;
  load_op	: OUT BIT;
  shift_a	: OUT BIT;
  shift_p	: OUT BIT;
  add_p_b	: OUT BIT
  );
  END COMPONENT;

BEGIN

  control : multiplier_control
  PORT MAP (
    add_p_b => add_p_b,
    shift_p => shift_p,
    shift_a => shift_a,
    load_op => load_op,
    end_op => end_op,
    ready => ready,
    msb_a => msb_a,
    start => start,
    reset => reset,
    clk => clk,
    vdd => vdd,
    vss => vss
  );
  data : multiplier_data
  PORT MAP (
    op_a => op_a,
    op_b => op_b,
    result => result,
    add_p_b => add_p_b,
    shift_p => shift_p,
    shift_a => shift_a,
    load_op => load_op,
    end_op => end_op,
    msb_a => msb_a,
    reset => reset,
    clk => clk,
    vdd => vdd,
    vss => vss
  );
END VST;
