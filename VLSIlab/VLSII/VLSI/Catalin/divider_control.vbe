--
-- Generated by VASY
--
ENTITY divider_control IS
PORT(
  clk	: IN BIT;
  reset	: IN BIT;
  start	: IN BIT;
  neg_p_p	: IN BIT;
  neg_p_r	: IN BIT;
  ready	: OUT BIT;
  end_op	: OUT BIT;
  load_op	: OUT BIT;
  shift_a	: OUT BIT;
  shift_p_poz	: OUT BIT;
  shift_p_neg	: OUT BIT;
  sub_p_b	: OUT BIT;
  add_p_b	: OUT BIT;
  add_final	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END divider_control;

ARCHITECTURE VBE OF divider_control IS

  SIGNAL rtlsum_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtldef_24	: BIT;
  SIGNAL rtldef_23	: BIT;
  SIGNAL rtldef_22	: BIT;
  SIGNAL rtldef_21	: BIT;
  SIGNAL rtldef_20	: BIT;
  SIGNAL rtldef_19	: BIT;
  SIGNAL rtldef_18	: BIT;
  SIGNAL rtldef_17	: BIT;
  SIGNAL rtldef_16	: BIT;
  SIGNAL rtldef_15	: BIT;
  SIGNAL rtldef_14	: BIT;
  SIGNAL rtldef_13	: BIT;
  SIGNAL rtldef_12	: BIT;
  SIGNAL rtldef_11	: BIT;
  SIGNAL rtldef_10	: BIT;
  SIGNAL rtldef_9	: BIT;
  SIGNAL rtldef_8	: BIT;
  SIGNAL rtldef_7	: BIT;
  SIGNAL rtldef_6	: BIT;
  SIGNAL rtldef_5	: BIT;
  SIGNAL rtldef_4	: BIT;
  SIGNAL rtldef_3	: BIT;
  SIGNAL rtldef_2	: BIT;
  SIGNAL rtldef_1	: BIT;
  SIGNAL rtldef_0	: BIT;
  SIGNAL curenta	: REG_VECTOR(0 TO 3) REGISTER;
  SIGNAL urmatoare	: BIT_VECTOR(0 TO 3);
  SIGNAL valid	: REG_BIT REGISTER;
  SIGNAL count	: REG_VECTOR(31 DOWNTO 0) REGISTER;
  SIGNAL counter_reddef_56	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL stmachine_def_20	: BIT;
  SIGNAL stmachine_def_16	: BIT;
BEGIN

  rtlcarry_0(0) <= '1';
  rtlsum_0 <= ((count XOR "11111111111111111111111111111110") XOR rtlcarry_0);
  rtlcarry_0(31 downto 1) <= (((count(30 downto 0) AND "1111111111111111111111111111110") OR (count(30 downto 0)
 AND rtlcarry_0(30 downto 0))) OR ("1111111111111111111111111111110" AND rtlcarry_0(30 downto 0)
));
  ready <= valid;
  LABEL0 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    valid <= GUARDED '1' WHEN (reset AND ((curenta(0) AND NOT(curenta(1)) AND NOT(curenta(2)) AND curenta(3))
 OR (NOT(curenta(0)) AND curenta(1) AND curenta(2) AND NOT(curenta(3))))) ELSE
     '0' WHEN (NOT(reset) OR (NOT(curenta(0)) AND NOT(curenta(1)) AND NOT(curenta(2)) AND NOT
(curenta(3)))) ELSE valid;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    count(31) <= GUARDED '1' WHEN (NOT(reset) OR (NOT(curenta(0)) AND NOT(curenta(2)) AND NOT(curenta(1)) AND NOT
(curenta(3)))) ELSE
     counter_reddef_56(31) WHEN (reset AND curenta(0) AND curenta(2) AND NOT(curenta(1)) AND NOT(curenta(3))) ELSE count(31);
  END BLOCK LABEL1;
  LABEL2 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    count(30 downto 0) <= GUARDED "1111111111111111111111111111111" WHEN NOT(reset) ELSE
     "0000000000000000000000000000000" WHEN (reset AND NOT(curenta(0)) AND NOT(curenta(2)) AND NOT(curenta(1)) AND NOT(curenta(3)
)) ELSE
     counter_reddef_56(30 downto 0) WHEN (reset AND curenta(0) AND curenta(2) AND NOT(curenta(1)) AND NOT(curenta(3))) ELSE count(30 downto 0);
  END BLOCK LABEL2;
  counter_reddef_56 <= rtlsum_0;
  LABEL3 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    curenta <= GUARDED urmatoare;
  END BLOCK LABEL3;
  shift_a <= (curenta = "1010");
  add_final <= (curenta = "1001");
  end_op <= (curenta = "0110");
  sub_p_b <= (curenta = "1110");
  add_p_b <= (curenta = "0001");
  shift_p_poz <= (curenta = "0010");
  shift_p_neg <= (curenta = "1100");
  load_op <= (curenta = "1000");
  rtldef_24 <= '1' WHEN ((curenta(3) AND NOT(curenta(2)) AND NOT(curenta(1)) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_23 <= '1' WHEN ((NOT(curenta(3)) AND curenta(2) AND curenta(1) AND NOT(curenta(0))) = '1') ELSE
     '0';
  rtldef_22 <= '1' WHEN ((NOT(curenta(3)) AND curenta(2) AND curenta(1) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_21 <= '1' WHEN ((NOT(curenta(3)) AND curenta(2) AND NOT(curenta(1)) AND NOT(curenta(0))) = '1'
) ELSE
     '0';
  rtldef_20 <= '1' WHEN ((NOT(curenta(3)) AND curenta(2) AND NOT(curenta(1)) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_19 <= '1' WHEN ((curenta(3) AND NOT(curenta(2)) AND NOT(curenta(1)) AND NOT(curenta(0))) = '1'
) ELSE
     '0';
  rtldef_18 <= '1' WHEN ((NOT(curenta(3)) AND NOT(curenta(2)) AND curenta(1) AND curenta(0)) = '1') ELSE
     '0';
  rtldef_17 <= '1' WHEN ((NOT(curenta(3)) AND NOT(curenta(2)) AND curenta(1) AND NOT(curenta(0))) = '1'
) ELSE
     '0';
  rtldef_16 <= '1' WHEN ((NOT(curenta(3)) AND NOT(curenta(2)) AND NOT(curenta(1)) AND curenta(0)) = '1'
) ELSE
     '0';
  rtldef_15 <= '1' WHEN ((NOT(curenta(3)) AND NOT(curenta(2)) AND NOT(curenta(1)) AND NOT(curenta(0))) 
= '1') ELSE
     '0';
  urmatoare <= (((rtldef_15 & rtldef_15 & rtldef_15 & rtldef_15) AND ((rtldef_14 & rtldef_14 &
 rtldef_14 & rtldef_14) AND ((rtldef_13 & rtldef_13 & rtldef_13 & rtldef_13) AND
 "1000"))) OR ((rtldef_16 & rtldef_16 & rtldef_16 & rtldef_16) AND ((rtldef_12 &
 rtldef_12 & rtldef_12 & rtldef_12) AND "0100")) OR ((rtldef_17 & rtldef_17 & rtldef_17
 & rtldef_17) AND ((rtldef_11 & rtldef_11 & rtldef_11 & rtldef_11) AND (((rtldef_9
 & rtldef_9 & rtldef_9 & rtldef_9) AND "0010") OR ((rtldef_10 & rtldef_10 & rtldef_10
 & rtldef_10) AND "1100")))) OR ((rtldef_18 & rtldef_18 & rtldef_18 & rtldef_18)
 AND ((rtldef_8 & rtldef_8 & rtldef_8 & rtldef_8) AND "0001")) OR ((rtldef_19 & rtldef_19
 & rtldef_19 & rtldef_19) AND ((rtldef_7 & rtldef_7 & rtldef_7 & rtldef_7) AND "1010"
)) OR ((rtldef_20 & rtldef_20 & rtldef_20 & rtldef_20) AND ((rtldef_6 & rtldef_6
 & rtldef_6 & rtldef_6) AND (((rtldef_4 & rtldef_4 & rtldef_4 & rtldef_4) AND "0100"
) OR ((rtldef_5 & rtldef_5 & rtldef_5 & rtldef_5) AND "0110")))) OR ((rtldef_21 
& rtldef_21 & rtldef_21 & rtldef_21) AND ((rtldef_3 & rtldef_3 & rtldef_3 & rtldef_3
) AND "1110")) OR ((rtldef_22 & rtldef_22 & rtldef_22 & rtldef_22) AND ((rtldef_2
 & rtldef_2 & rtldef_2 & rtldef_2) AND "1010")) OR ((rtldef_23 & rtldef_23 & rtldef_23
 & rtldef_23) AND ((rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1) AND ((rtldef_0 & rtldef_0
 & rtldef_0 & rtldef_0) AND "1001"))) OR ((rtldef_24 & rtldef_24 & rtldef_24 & rtldef_24
) AND "0000"));
  rtldef_14 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_13 <= '1' WHEN (start = '1') ELSE
     '0';
  rtldef_12 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_11 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_10 <= '1' WHEN stmachine_def_20 ELSE
     '0';
  rtldef_9 <= '1' WHEN NOT(stmachine_def_20) ELSE
     '0';
  stmachine_def_20 <= (neg_p_p = '1');
  rtldef_8 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_7 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_6 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_5 <= '1' WHEN stmachine_def_16 ELSE
     '0';
  rtldef_4 <= '1' WHEN NOT(stmachine_def_16) ELSE
     '0';
  stmachine_def_16 <= (count = "00000000000000000000000000000001");
  rtldef_3 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_2 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_1 <= '1' WHEN NOT((reset = '0')) ELSE
     '0';
  rtldef_0 <= '1' WHEN (neg_p_r = '1') ELSE
     '0';
END VBE;
